library(devtools)
library(usethis)
library(devtools)
packageVersion(devtools)
packageVersion('devtools')
usethis::create_package("disease-library")
usethis::create_package("dislib")
library(tidyverse)
library(owidR)
# Using the owidR package, we can get the data on mortality rate for each causes
cause_of_death <- owid("share-of-deaths-by-cause")
# url for downloding data on country name and region
url <- 'https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv'
# Read country code and region data
country <- read_csv(url)
# Extract country code
alpha_3 <- country %>%
pull(`alpha-3`) %>%
tolower()
# Join mortality and country data set together
data <- cause_of_death %>%
filter(tolower(code) %in% alpha_3) %>%
group_by(code) %>%
right_join(country, by = c("code" = "alpha-3")) %>%
ungroup()
mortality <- data %>%
# select only relevant variable
select(entity,
code,
year,
`Deaths - Cardiovascular diseases - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Neoplasms - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Maternal disorders - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Chronic respiratory diseases - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Digestive diseases - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Diabetes mellitus - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Lower respiratory infections - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Neonatal disorders - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Diarrheal diseases - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Cirrhosis and other chronic liver diseases - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Tuberculosis - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Chronic kidney disease - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Alzheimer's disease and other dementias - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Parkinson's disease - Sex: Both - Age: All Ages (Percent)`,
`Deaths - HIV/AIDS - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Acute hepatitis - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Malaria - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Nutritional deficiencies - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Meningitis - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Protein-energy malnutrition - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Enteric infections - Sex: Both - Age: All Ages (Percent)`,
region) %>%
# Remove NA value
na.omit() %>%
# Put data into long format
pivot_longer(-c(entity, code, year, region),
names_to = "disease",
values_to = "mortality_rate") %>%
# Clean Disease name
mutate(disease = str_replace_all(disease, c("Deaths - " = "", " - Sex: Both - Age: All Ages \\(Percent\\)" = "")),
`mortality_rate` = round(`mortality_rate`, 4)) %>%
# Rename column
rename(country = entity,
continent = region) %>%
# Relocate the column
relocate(c(continent, year, disease, `mortality_rate`),
.after = c(code, continent, year, disease))
View(mortality)
visdat::vis_miss(mortality)
usethis::use_data(mortality, overwrite = TRUE)
usethis::use_r("mortality")
library(roxygen2)
devtools::document()
devtools::document()
View(cause_of_death)
unique(mortality$year)
View(mortality)
?gapminder
??gapminder
devtools::document()
devtools::document()
devtools::document()
devtools::load_all()
mortality
?mortality
devtools::check()
devtools::check()
devtools::check()
usethis::use_r(run-app)
usethis::use_r("run-app")
devtools::check()
use_roxygen_md()
usethis::use_roxygen_md()
devtools::document()
library(shiny)
library(tidyverse)
library(plotly)
library(knitr)
library(kableExtra)
library(shinythemes)
library(dislib)
mortality
runApp('inst/shiny-app')
runApp('inst/shiny-app')
runApp('inst/shiny-app')
runApp('inst/shiny-app')
runApp('inst/shiny-app')
devtools::load_all()
run_app()
devtools::document()
usethis::use_github_links()
shiny::runApp('inst/shiny-app')
devtools::load_all(".")
runApp('inst/shiny-app')
usethis::use_package(shiny)
usethis::use_package("shiny")
usethis::use_package("dplyr")
usethis::use_package("plotly")
usethis::use_package("kableExtra")
usethis::use_package("shinythemes")
usethis::use_package("owidR")
library(dplyr)
library(owidR)
# Using the owidR package, we can get the data on mortality rate for each causes
cause_of_death <- owid("share-of-deaths-by-cause")
# url for downloding data on country name and region
url <- 'https://raw.githubusercontent.com/lukes/ISO-3166-Countries-with-Regional-Codes/master/all/all.csv'
# Read country code and region data
country <- read_csv(url)
library(readr)
# Read country code and region data
country <- read_csv(url)
# Extract country code
alpha_3 <- country %>%
pull(`alpha-3`) %>%
tolower()
# Join mortality and country data set together
data <- cause_of_death %>%
filter(tolower(code) %in% alpha_3) %>%
group_by(code) %>%
right_join(country, by = c("code" = "alpha-3")) %>%
ungroup()
mortality <- data %>%
# select only relevant variable
select(entity,
code,
year,
`Deaths - Cardiovascular diseases - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Neoplasms - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Maternal disorders - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Chronic respiratory diseases - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Digestive diseases - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Diabetes mellitus - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Lower respiratory infections - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Neonatal disorders - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Diarrheal diseases - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Cirrhosis and other chronic liver diseases - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Tuberculosis - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Chronic kidney disease - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Alzheimer's disease and other dementias - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Parkinson's disease - Sex: Both - Age: All Ages (Percent)`,
`Deaths - HIV/AIDS - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Acute hepatitis - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Malaria - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Nutritional deficiencies - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Meningitis - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Protein-energy malnutrition - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Enteric infections - Sex: Both - Age: All Ages (Percent)`,
region) %>%
# Remove NA value
na.omit() %>%
# Put data into long format
pivot_longer(-c(entity, code, year, region),
names_to = "disease",
values_to = "mortality_rate") %>%
# Clean Disease name
mutate(disease = str_replace_all(disease, c("Deaths - " = "", " - Sex: Both - Age: All Ages \\(Percent\\)" = "")),
`mortality_rate` = round(`mortality_rate`, 4)) %>%
# Rename column
rename(country = entity,
continent = region) %>%
# Relocate the column
relocate(c(continent, year, disease, `mortality_rate`),
.after = c(code, continent, year, disease))
library(tidyr)
mortality <- data %>%
# select only relevant variable
select(entity,
code,
year,
`Deaths - Cardiovascular diseases - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Neoplasms - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Maternal disorders - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Chronic respiratory diseases - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Digestive diseases - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Diabetes mellitus - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Lower respiratory infections - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Neonatal disorders - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Diarrheal diseases - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Cirrhosis and other chronic liver diseases - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Tuberculosis - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Chronic kidney disease - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Alzheimer's disease and other dementias - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Parkinson's disease - Sex: Both - Age: All Ages (Percent)`,
`Deaths - HIV/AIDS - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Acute hepatitis - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Malaria - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Nutritional deficiencies - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Meningitis - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Protein-energy malnutrition - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Enteric infections - Sex: Both - Age: All Ages (Percent)`,
region) %>%
# Remove NA value
na.omit() %>%
# Put data into long format
pivot_longer(-c(entity, code, year, region),
names_to = "disease",
values_to = "mortality_rate") %>%
# Clean Disease name
mutate(disease = str_replace_all(disease, c("Deaths - " = "", " - Sex: Both - Age: All Ages \\(Percent\\)" = "")),
`mortality_rate` = round(`mortality_rate`, 4)) %>%
# Rename column
rename(country = entity,
continent = region) %>%
# Relocate the column
relocate(c(continent, year, disease, `mortality_rate`),
.after = c(code, continent, year, disease))
library(stringr)
mortality <- data %>%
# select only relevant variable
select(entity,
code,
year,
`Deaths - Cardiovascular diseases - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Neoplasms - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Maternal disorders - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Chronic respiratory diseases - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Digestive diseases - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Diabetes mellitus - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Lower respiratory infections - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Neonatal disorders - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Diarrheal diseases - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Cirrhosis and other chronic liver diseases - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Tuberculosis - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Chronic kidney disease - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Alzheimer's disease and other dementias - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Parkinson's disease - Sex: Both - Age: All Ages (Percent)`,
`Deaths - HIV/AIDS - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Acute hepatitis - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Malaria - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Nutritional deficiencies - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Meningitis - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Protein-energy malnutrition - Sex: Both - Age: All Ages (Percent)`,
`Deaths - Enteric infections - Sex: Both - Age: All Ages (Percent)`,
region) %>%
# Remove NA value
na.omit() %>%
# Put data into long format
pivot_longer(-c(entity, code, year, region),
names_to = "disease",
values_to = "mortality_rate") %>%
# Clean Disease name
mutate(disease = str_replace_all(disease, c("Deaths - " = "", " - Sex: Both - Age: All Ages \\(Percent\\)" = "")),
`mortality_rate` = round(`mortality_rate`, 4)) %>%
# Rename column
rename(country = entity,
continent = region) %>%
# Relocate the column
relocate(c(continent, year, disease, `mortality_rate`),
.after = c(code, continent, year, disease))
usethis::use_data(mortality, overwrite = TRUE)
usethis::use_package("tidyr")
usethis::use_package("readr")
usethis::use_package("stringr")
devtools::reload()
devtools::load_all()
run_app()
mortality
usethis::use_pipe()
devtools::load_all
devtools::load_all(\)
devtools::load_all()
devtools::check()
usethis::use_tidy_description()
devtools::load_all()
mortality
devtools::load_all(".")
mortality
devtools::load_all(".")
run_app()
data <- mortality
View(data)
devtools::check()
usethis::use_package("shiny")
devtools::check()
usethis::use_r("diseases")
devtools::load_all(".")
source("G:/My Drive/ETC5523/Assignment/rpkg-KrisanatA/R/diseases.R", echo=TRUE)
list_disease()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
list_disease
list_disease()
mortality
mortality %>% pull(disease)
mortality %>% dplyr::pull(disease)
disease <- dislib::mortality %>%
dplyr::group_by(disease)
disease <- dislib::mortality %>%
dplyr::group_by(disease) %>%
dplyr::pull(disease)
#' Get the list of diseases available in the dataset
#'
#' @export
disease <- unique(dislib::mortality$disease)
disease
devtools::load_all(".")
list_disease()
devtools::load_all(".")
list_disease()
devtools::load_all(".")
list_disease()
devtools::load_all(".")
mortality
run_app()
usethis::use_r("ranking")
run_app()
any()
?any()
usethis::use_package("dplyr")
devtools::load_all(".")
ranking(Australia, 2019)
ranking("Australia", 2019)
usethis::use_r("list")
characters <- c(
"cow",
"chicken",
"poop",
"cat",
"facecat",
"bigcat",
"longcat",
"shortcat",
"behindcat",
"longtailcat",
"anxiouscat",
"grumpycat",
"smallcat",
"ant",
"pumpkin",
"ghost",
"spider",
"rabbit",
"pig",
"snowman",
"frog",
"hypnotoad",
"signbunny",
"stretchycat",
"fish",
"trilobite",
"shark",
"buffalo",
"clippy",
"mushroom",
"monkey",
"egret",
"rms"
)
characters
devtools::load_all(".")
disease_list()
devtools::load_all(".")
year_list()
year_list("Australia")
devtools::load_all(".")
year_list("Australia")
devtools::load_all(".")
year_list("Australia")
country_list()
devtools::check()
usethis::use_package("dplyr")
devtools::check()
devtools::document()
usethis::use_pipe(export = FALSE)
devtools::document()
devtools::check()
devtools::check()
usethis::use_r("plot-dis")
usethis::use_package("ggplot2")
?filter()
devtools::load_all(".")
devtools::load_all(".")
devtools::document()
devtools::check()
?element_text
?unique
devtools::check()
devtools::load_all()
disease_list()
plot_dis("Cardiovascular diseases", "Australia")
plot_dis("Cardiovascular diseases", "Australia")
devtools::load_all()
devtools::document()
mortality
disease_list()
devtools::load_all()
plot_dis("Cardiovascular diseases", "Australia")
country_list
country_list()
devtools::load_all()
plot_dis("Cardiovascular diseases", "Australia")
devtools::load_all()
plot_dis("Cardiovascular diseases", "Australia")
devtools::check()
usethis::use_package("plotly")
devtools::check()
devtools::check()
library(dislib)
dis_summary("Australia", 2019)
glimpse(mortality)
library(tidyverse)
glimpse(mortality)
head(mortality)
plot_dis("Neoplasms", "Australia")
country_list()
disease_list()
year_list("Australia")
devtools::load_all(".")
devtools::check()
library(dislib)
mortality
devtools::document()
devtools::document()
mortality[,10]
mortality[10,]
mortality[10]
mortality[1:10,]
devtools::build_rmd()
devtools::check()
usethis::use_pkgdown()
pkgdown::build_site()
usethis::use_pkgdown_github_pages()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
run_app()
